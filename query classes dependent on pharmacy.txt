class PatientSearch(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int,
        "name": str,
        "maxage": int,
        "minage": int,
        "doctor": str,
        "drug": str,
        "address": str  
    }
RETURNS = ("name", "age", "address", "doctor")

class DoctorSearch(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int,
        "name": str,
        "exp": int,
        "specialty": str,
        "patient": str,
        "drug": str  
    }
RETURNS = ("name", "specialty", "exp")

class DrugSearch(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int,
        "name": str,
        "formula": str,
        "min_price": int,
        "max_price": int,
        "drug": str  
    }
RETURNS = ("name", "formula", "bigpharma_id")

class PrescriptionSearch(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int,
        "patient": str,
        "doctor": str,
        "drug": str,
	"date": str
    }
RETURNS = ("name", "doctor", "drug", "date", "dosage")

class DrugsOnSale(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int
    }
RETURNS = ("name", "maker", "formula", "price")

class CountDrugsOnSale(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int
    }
RETURNS = ("count")

class PartneredBigpharmas(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int
    }
RETURNS = ("name", "phone")

class NotPartneredBigpharmas(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int
    }
RETURNS = ("name", "phone")

class PotentialDrugs(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int
    }
RETURNS = ("name")

class DrugsFromOtherPharmas(Pharmacy.Query):
    ARGUMENTS = {
        "our_pharmacy": int
    }
RETURNS = ("name")